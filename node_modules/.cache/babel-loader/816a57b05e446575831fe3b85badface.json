{"ast":null,"code":"var _jsxFileName = \"/home/juan/Escritorio/Antiguos/movie-react/movie-react/src/pages/MovieDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Spinner } from \"../components/Spinner\";\nimport { get } from \"../utils/httpClient\";\nimport styles from './MovieDetails.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MovieDetails() {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    setIsLoading(true);\n    get(\"/movie/\" + movieId).then(data => {\n      setMovie(data);\n      setIsLoading(false);\n    });\n  }, [movieId]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      size: 60\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!movie) {\n    return null;\n  }\n\n  const imageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n  console.log(movie);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.detailsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: ` ${styles.col} ${styles.movieImage} `,\n      src: imageUrl,\n      alt: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ` ${styles.col} ${styles.movieDetails} `,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.firstItem,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" Tittle: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), \"  \", movie.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" Gengers: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), movie.genres.map(genre => genre.name).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), \"  \", movie.overview]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Product rating: \", /*#__PURE__*/_jsxDEV(\"meter\", {\n          class: \"average-rating\",\n          min: \"0\",\n          max: \"5\",\n          value: \"4.3\",\n          title: \"4.3 out of 5 stars\",\n          children: \"4.3 out of 5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieDetails, \"uwLDMKdUYuQPV5EqgKLwxRyoPUg=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/home/juan/Escritorio/Antiguos/movie-react/movie-react/src/pages/MovieDetails.jsx"],"names":["useEffect","useState","useParams","Spinner","get","styles","MovieDetails","movieId","isLoading","setIsLoading","movie","setMovie","then","data","imageUrl","poster_path","console","log","detailsContainer","col","movieImage","title","movieDetails","firstItem","genres","map","genre","name","join","overview"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,GAAT,QAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAGA,OAAO,SAASC,YAAT,GAAuB;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAcL,SAAS,EAA7B;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAL,IAAAA,GAAG,CAAC,YAAYG,OAAb,CAAH,CAAyBK,IAAzB,CAA+BC,IAAD,IAAU;AACpCF,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAHD;AAIH,GANQ,EAMN,CAACF,OAAD,CANM,CAAT;;AAQA,MAAGC,SAAH,EAAc;AACV,wBAAO,QAAC,OAAD;AAAS,MAAA,IAAI,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAI,CAACE,KAAL,EAAY;AACR,WAAO,IAAP;AACH;;AAED,QAAMI,QAAQ,GAAG,oCAAoCJ,KAAK,CAACK,WAA3D;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACa,gBAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAG,IAAGb,MAAM,CAACc,GAAI,IAAGd,MAAM,CAACe,UAAW,GAApD;AAAyD,MAAA,GAAG,EAAEN,QAA9D;AAAwE,MAAA,GAAG,EAAEJ,KAAK,CAACW;AAAnF;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAG,IAAGhB,MAAM,CAACc,GAAI,IAAGd,MAAM,CAACiB,YAAa,GAAtD;AAAA,8BACI;AAAG,QAAA,SAAS,EAAEjB,MAAM,CAACkB,SAArB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,QACiCb,KAAK,CAACW,KADvC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKX,KAAK,CAACc,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAIA,KAAK,CAACC,IAAhC,EAAsCC,IAAtC,CAA2C,IAA3C,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eASI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,QACsClB,KAAK,CAACmB,QAD5C;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAYI;AAAA,oDAAmB;AAAO,UAAA,KAAK,EAAC,gBAAb;AAA8B,UAAA,GAAG,EAAC,GAAlC;AAAsC,UAAA,GAAG,EAAC,GAA1C;AAA8C,UAAA,KAAK,EAAC,KAApD;AAA0D,UAAA,KAAK,EAAC,oBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA5CevB,Y;UACQJ,S;;;KADRI,Y","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Spinner } from \"../components/Spinner\";\nimport { get } from \"../utils/httpClient\";\nimport styles from './MovieDetails.module.css';\n\n\nexport function MovieDetails(){\n    const { movieId } = useParams();\n    const [isLoading, setIsLoading] = useState(true);\n    const [movie, setMovie] = useState(null);\n\n    useEffect(() => {\n        setIsLoading(true);\n        get(\"/movie/\" + movieId).then((data) => {            \n            setMovie(data);\n            setIsLoading(false);\n        });\n    }, [movieId]);\n\n    if(isLoading) {\n        return <Spinner size={60} />\n    }\n\n    if (!movie) {\n        return null;\n    }\n\n    const imageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.poster_path;\n    console.log(movie)\n\n    return (\n        <div className={styles.detailsContainer}>\n            <img className={` ${styles.col} ${styles.movieImage} `}  src={imageUrl} alt={movie.title} />\n            <div className={` ${styles.col} ${styles.movieDetails} `}>\n                <p className={styles.firstItem}> \n                    <strong> Tittle: </strong>  {movie.title} \n                </p>\n                <p>\n                    <strong> Gengers: </strong>\n                    {movie.genres.map(genre => genre.name).join(\", \")}\n                    \n                </p>\n                <p> \n                    <strong> Description: </strong>  {movie.overview} \n                </p>\n                <p>Product rating: <meter class=\"average-rating\" min=\"0\" max=\"5\" value=\"4.3\" title=\"4.3 out of 5 stars\">4.3 out of 5</meter>\n</p>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}